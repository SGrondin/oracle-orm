/*** Generated by streamline 0.10.9 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb; (function() {
  var Column, ORM, Table, types, util;

  Table = require("./Table");

  Column = require("./Column");

  util = require("util");

  types = require("./types");

  ORM = (function() {
    function ORM(connect) {
      this.connection = {
        execute: function(sql, args, cb) {
          con(sql);
          return connect.execute(sql, args, cb); } };


      this; };


    ORM.prototype.getModels = function ORM_prototype_getModels__1(_) { var ret, tables, __this = this; var __frame = { name: "ORM_prototype_getModels__1", line: 23 }; return __func(_, this, arguments, ORM_prototype_getModels__1, 0, __frame, function __$ORM_prototype_getModels__1() {

        ret = { };
        return __this.connection.execute("SELECT TABLE_NAME FROM USER_TABLES", [], __cb(_, __frame, 3, 31, function ___(__0, __1) { tables = __1;
          return tables.forEach_(__cb(_, __frame, 4, 13, function __$ORM_prototype_getModels__1() {









            return _(null, ret); }, true), -1, (function(_this) { return function __1(_, table) { var columns; var __frame = { name: "__1", line: 28 }; return __func(_, this, arguments, __1, 0, __frame, function __$__1() { return _this.connection.execute("SELECT COLUMN_NAME, DATA_TYPE, DATA_LENGTH FROM USER_TAB_COLUMNS WHERE TABLE_NAME=:1 ORDER BY COLUMN_ID", [table.TABLE_NAME,], __cb(_, __frame, 2, 37, function ___(__0, __1) { columns = __1; columns = columns.map(function(c) { return new Column(c.COLUMN_NAME, types.getType(c.DATA_TYPE), c.DATA_LENGTH); }); return _(null, ret[table.TABLE_NAME] = new Table(_this.connection, table.TABLE_NAME, columns, [])); }, true)); }); }; })(__this)); }, true)); }); };


    ORM.prototype.execute = function ORM_prototype_execute__2(sql, args, _) { var __this = this; var __frame = { name: "ORM_prototype_execute__2", line: 40 }; return __func(_, this, arguments, ORM_prototype_execute__2, 2, __frame, function __$ORM_prototype_execute__2() {
        return __this.connection.execute(sql, args, __cb(_, __frame, 1, 29, _, true)); }); };


    return ORM;

  })();

  module.exports = ORM;

}).call(this);
