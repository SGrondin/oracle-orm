/*** Generated by streamline 0.10.10 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb; (function() {
  var Query, Row, getOrderBy, helpers, types;

  Row = require("./Row");

  types = require("./types");

  helpers = require("./helpers");

  getOrderBy = function(orderBy) {
    if ((((orderBy != null)) && (orderBy.length > 0))) {
      orderBy = orderBy.map(function(a) {
        if ((a[0] === "-")) {
          return (("\"" + a.slice(1)) + "\" DESC"); }
         else {
          return (("\"" + a) + "\" ASC"); } ; });


      return ("ORDER BY " + orderBy.join(", ")); }
     else {
      return ""; } ; };



  Query = (function() {
    function Query(connection, table, safe) {
      this.connection = connection;
      this.table = table;
      if ((safe == null)) {
        safe = true; } ;

      this.getWhere = (safe ? function(obj) {
        return helpers.getWhere(obj, "=");
      } : helpers.getWhereNoPlaceholders); };


    Query.prototype.select = function Query_prototype_select__1(where, orderBy, _) { var order, values, _ref, __this = this; var __frame = { name: "Query_prototype_select__1", line: 37 }; return __func(_, this, arguments, Query_prototype_select__1, 2, __frame, function __$Query_prototype_select__1() {

        order = getOrderBy(orderBy);
        _ref = __this.getWhere(where), where = _ref[0], values = _ref[1];
        return (__this.connection.execute(((((("SELECT * FROM \"" + __this.table.name) + "\" WHERE ") + where) + " ") + order), values, __cb(_, __frame, 4, 30, function ___(__0, __2) { var __1 = __2.map((function(_this) {
            return function(line) {
              return new Row(_this.connection, _this.table, line); };

          })(__this)); return _(null, __1); }, true))); }); };


    Query.prototype.update = function Query_prototype_update__2(pairs, where, _) { var update, values1, values2, _ref, _ref1, __this = this; var __frame = { name: "Query_prototype_update__2", line: 48 }; return __func(_, this, arguments, Query_prototype_update__2, 2, __frame, function __$Query_prototype_update__2() {

        _ref = helpers.getWhere(pairs, "="), update = _ref[0], values1 = _ref[1];
        _ref1 = __this.getWhere(where), where = _ref1[0], values2 = _ref1[1];
        return __this.connection.execute(((((("UPDATE \"" + __this.table.name) + "\" SET ") + update.join(", ")) + " WHERE ") + where.join(" AND ")), values1.concat(values2), __cb(_, __frame, 4, 29, _, true)); }); };


    Query.prototype.insert = function Query_prototype_insert__3(pairs, _) { var col, columns, i, params, placeholders, primaries, returnPlaceholders, values, __this = this; var __frame = { name: "Query_prototype_insert__3", line: 55 }; return __func(_, this, arguments, Query_prototype_insert__3, 1, __frame, function __$Query_prototype_insert__3() {










        return (function ___closure(_) { var _i, _len, _ref, _results; _ref = Object.keys(pairs); _results = []; for (_i = 0, _len = _ref.length; (_i < _len); _i++) { col = _ref[_i]; _results.push((("\"" + col) + "\"")); }; return _(null, _results); })(__cb(_, __frame, 2, 16, function ___(__0, __1) { columns = __1;
          values = helpers.getValues(pairs);
          placeholders = (helpers.getPlaceholders(values.length)).join(", ");
          primaries = __this.table.primary.map(function(a) {
            return a.name;
          }).join(", ");
          returnPlaceholders = (helpers.getPlaceholders(__this.table.primary.length)).join(", ");









          return (function ___closure(_) { var _i, _len, _ref, _results; _ref = __this.table.primary; _results = []; for (_i = 0, _len = _ref.length; (_i < _len); _i++) { i = _ref[_i]; _results.push(new __this.connection.driver.OutParam(types.typeToOCCI[i.type])); }; return _(null, _results); })(__cb(_, __frame, 18, 33, function ___(__0, __2) { params = [].concat(values, __2);
            return __this.connection.execute(((((((((("INSERT INTO \"" + __this.table.name) + "\"(") + columns.join(", ")) + ") VALUES(") + placeholders) + ") RETURNING ") + primaries) + " INTO ") + returnPlaceholders), params, __cb(_, __frame, 28, 29, _, true)); }, true)); }, true)); }); };


    Query.prototype.del = function Query_prototype_del__4(where, _) { var values, _ref, __this = this; var __frame = { name: "Query_prototype_del__4", line: 86 }; return __func(_, this, arguments, Query_prototype_del__4, 1, __frame, function __$Query_prototype_del__4() {

        _ref = __this.getWhere(where), where = _ref[0], values = _ref[1];
        return __this.connection.execute(((("DELETE FROM \"" + __this.table.name) + "\" WHERE ") + where.join(" AND ")), values, __cb(_, __frame, 3, 29, _, true)); }); };


    return Query;

  })();

  module.exports = Query;

}).call(this);
