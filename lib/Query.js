/*** Generated by streamline 0.10.9 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb; (function() {
  var Query, getPlaceholders;

  getPlaceholders = function(nb) {
    var i;
    return ((function() {
      var _i, _results;
      _results = [];
      for (i = _i = 1; ((1 <= nb) ? (_i <= nb) : (_i >= nb)); i = ((1 <= nb) ? ++_i : --_i)) {
        _results.push((":" + i)); };

      return _results;
    })()).join(", "); };


  Query = (function() {
    function Query(connection, table) {
      this.connection = connection;
      this.table = table;
      this; };


    Query.prototype.select = function Query_prototype_select__1(where, orderBy, joins, _) { var __this = this; var __frame = { name: "Query_prototype_select__1", line: 23 }; return __func(_, this, arguments, Query_prototype_select__1, 3, __frame, function __$Query_prototype_select__1() {
        where = Object.keys(where).map(function(k) {
          return (k + where[k]);
        }).join(" AND ");
        if ((where.length === 0)) {
          where = "1=1"; } ;

        return __this.connection.execute(((("SELECT * FROM " + __this.table) + " WHERE ") + where), [], __cb(_, __frame, 7, 29, _, true)); }); };


    Query.prototype.update = function Query_prototype_update__2(columns, where, _) { var __frame = { name: "Query_prototype_update__2", line: 33 }; return __func(_, this, arguments, Query_prototype_update__2, 2, __frame, function __$Query_prototype_update__2() { _(); }); };

    Query.prototype.insert = function Query_prototype_insert__3(pairs, _) { var columns, placeholders, values, __this = this; var __frame = { name: "Query_prototype_insert__3", line: 35 }; return __func(_, this, arguments, Query_prototype_insert__3, 1, __frame, function __$Query_prototype_insert__3() {

        columns = Object.keys(pairs);
        values = columns.map(function(c) {
          return pairs[c]; });

        placeholders = getPlaceholders(values.length);
        return __this.connection.execute((((((("INSERT INTO " + __this.table) + "(") + columns) + ") VALUES(") + placeholders) + ")"), values, __cb(_, __frame, 7, 29, _, true)); }); };


    Query.prototype.del = function Query_prototype_del__4(where, _) { var __frame = { name: "Query_prototype_del__4", line: 45 }; return __func(_, this, arguments, Query_prototype_del__4, 1, __frame, function __$Query_prototype_del__4() { _(); }); };

    return Query;

  })();

  module.exports = Query;

}).call(this);
