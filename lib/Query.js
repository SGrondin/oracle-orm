/*** Generated by streamline 0.10.10 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb; (function() {
  var Query, Row, helpers, types;

  Row = require("./Row");

  types = require("./types");

  helpers = require("./helpers");

  Query = (function() {
    function Query(connection, table) {
      this.connection = connection;
      this.table = table; };


    Query.prototype.select = function Query_prototype_select__1(where, orderBy, joins, _) { var order, __this = this; var __frame = { name: "Query_prototype_select__1", line: 16 }; return __func(_, this, arguments, Query_prototype_select__1, 3, __frame, function __$Query_prototype_select__1() {

        order = ((orderBy != null) ? ("ORDER BY " + orderBy.join(" AND ")) : "");
        return (__this.connection.execute(((((("SELECT * FROM " + __this.table.name) + " WHERE ") + helpers.getWhere(where)) + " ") + order), [], __cb(_, __frame, 3, 30, function ___(__0, __2) { var __1 = __2.map((function(_this) {
            return function(line) {
              return new Row(_this.connection, _this.table, line); };

          })(__this)); return _(null, __1); }, true))); }); };


    Query.prototype.update = function Query_prototype_update__2(pairs, where, _) { var __this = this; var __frame = { name: "Query_prototype_update__2", line: 26 }; return __func(_, this, arguments, Query_prototype_update__2, 2, __frame, function __$Query_prototype_update__2() {
        return __this.connection.execute(((((("UPDATE " + __this.table.name) + " SET ") + (helpers.getListPlaceholders(pairs, "=")).join(", ")) + " WHERE ") + (helpers.getWhere(where))), helpers.getValues(pairs), __cb(_, __frame, 1, 29, _, true)); }); };


    Query.prototype.updateWithEquals = function Query_prototype_updateWithEquals__3(pairs, where, _) { var __this = this; var __frame = { name: "Query_prototype_updateWithEquals__3", line: 30 }; return __func(_, this, arguments, Query_prototype_updateWithEquals__3, 2, __frame, function __$Query_prototype_updateWithEquals__3() {
        return __this.connection.execute(((((("UPDATE " + __this.table.name) + " SET ") + (helpers.getListPlaceholders(pairs, "=")).join(", ")) + " WHERE ") + (helpers.getWhere(where, "="))), helpers.getValues(pairs), __cb(_, __frame, 1, 29, _, true)); }); };


    Query.prototype.insert = function Query_prototype_insert__4(pairs, _) { var columns, placeholders, values, __this = this; var __frame = { name: "Query_prototype_insert__4", line: 34 }; return __func(_, this, arguments, Query_prototype_insert__4, 1, __frame, function __$Query_prototype_insert__4() {

        columns = Object.keys(pairs);
        values = helpers.getValues(pairs);
        placeholders = (helpers.getPlaceholders(values.length)).join(", ");
        return __this.connection.execute((((((("INSERT INTO " + __this.table.name) + "(") + columns.join(", ")) + ") VALUES(") + placeholders) + ")"), values, __cb(_, __frame, 5, 29, _, true)); }); };


    Query.prototype.del = function Query_prototype_del__5(where, _) { var __this = this; var __frame = { name: "Query_prototype_del__5", line: 42 }; return __func(_, this, arguments, Query_prototype_del__5, 1, __frame, function __$Query_prototype_del__5() {
        return __this.connection.execute(((("DELETE FROM " + __this.table.name) + " WHERE ") + helpers.getWhere(where)), [], __cb(_, __frame, 1, 29, _, true)); }); };


    return Query;

  })();

  module.exports = Query;

}).call(this);
