/*** Generated by streamline 0.10.10 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb; (function() {
  var Row, helpers, __hasProp = {
  }.hasOwnProperty;

  helpers = require("./helpers");

  Row = (function() {
    function Row(connection, table, data) {
      this.connection = connection;
      this.table = table;
      this.data = data;
      this.deleted = false;
      this.makeBackData(); };


    Row.prototype.makeBackData = function() {
      var k, v, _ref;
      this.backdata = { };
      _ref = this.data;
      for (k in _ref) {
        if (!__hasProp.call(_ref, k)) { continue; };
        v = _ref[k];
        this.backdata[k] = v; };

      return this.backdata; };


    Row.prototype.getDirty = function() {
      var dirty, k, v, _ref;
      dirty = { };
      _ref = this.backdata;
      for (k in _ref) {
        v = _ref[k];
        if ((v !== this.data[k])) {
          dirty[k] = this.data[k]; } ; };


      return dirty; };


    Row.prototype.isDirty = function() {
      return (Object.keys(this.getDirty()).length > 0); };


    Row.prototype.save = function Row_prototype_save__1(_) { var dirty, r, update, values1, values2, where, _ref, _ref1, __this = this; var __frame = { name: "Row_prototype_save__1", line: 45 }; return __func(_, this, arguments, Row_prototype_save__1, 0, __frame, function __$Row_prototype_save__1() {

        if (__this.deleted) {
          return _(new Error((("Unit " + __this.table.name) + " was deleted and doesn't exist anymore"))); } ;

        dirty = __this.getDirty();
        if ((Object.keys(dirty).length === 0)) {
          return _(null, []); } ;

        _ref = helpers.getWhere(dirty, "="), update = _ref[0], values1 = _ref[1];
        _ref1 = helpers.getWhere(helpers.getPKPairs(__this), "="), where = _ref1[0], values2 = _ref1[1];
        return __this.connection.execute(((((("UPDATE \"" + __this.table.name) + "\" SET ") + update.join(", ")) + " WHERE ") + where.join(" AND ")), values1.concat(values2), __cb(_, __frame, 11, 26, function ___(__0, __1) { r = __1;
          if ((r.updateCount === 0)) {
            __this.deleted = true;
            __this.data = { };
            return _(new Error((("Unit " + __this.table.name) + " was deleted and doesn't exist anymore"))); }
           else {
            __this.makeBackData(); } ; return _(null, __this); }, true)); }); };




    Row.prototype.sync = function Row_prototype_sync__2(_) { var r, values, where, _ref, __this = this; var __frame = { name: "Row_prototype_sync__2", line: 67 }; return __func(_, this, arguments, Row_prototype_sync__2, 0, __frame, function __$Row_prototype_sync__2() {

        if (__this.deleted) {
          return _(new Error((("Unit " + __this.table.name) + " was deleted and doesn't exist anymore"))); } ;

        _ref = helpers.getWhere(helpers.getPKPairs(__this), "="), where = _ref[0], values = _ref[1];
        return __this.connection.execute(((("SELECT * FROM \"" + __this.table.name) + "\" WHERE ") + where.join(" AND ")), values, __cb(_, __frame, 6, 26, function ___(__0, __1) { r = __1;
          if ((r.length === 0)) {
            __this.deleted = true;
            __this.data = { };
            return _(new Error((("Unit " + __this.table.name) + " was deleted and doesn't exist anymore"))); }
           else {
            __this.data = r[0]; } ;

          __this.makeBackData(); return _(null, __this); }, true)); }); };



    Row.prototype.reset = function Row_prototype_reset__3(_) { var __this = this; var __frame = { name: "Row_prototype_reset__3", line: 85 }; return __func(_, this, arguments, Row_prototype_reset__3, 0, __frame, function __$Row_prototype_reset__3() {
        __this.data = __this.backdata;
        __this.makeBackData();
        return _(null, __this.data); }); };


    Row.prototype.del = function Row_prototype_del__4(_) { var values, where, _ref, __this = this; var __frame = { name: "Row_prototype_del__4", line: 91 }; return __func(_, this, arguments, Row_prototype_del__4, 0, __frame, function __$Row_prototype_del__4() {

        if (__this.deleted) {
          return _(new Error((("Unit " + __this.table.name) + " was deleted and doesn't exist anymore"))); } ;

        _ref = helpers.getWhere(helpers.getPKPairs(__this), "="), where = _ref[0], values = _ref[1];
        __this.deleted = true;
        return __this.connection.execute(((("DELETE FROM \"" + __this.table.name) + "\" WHERE ") + where.join(" AND ")), values, __cb(_, __frame, 7, 29, _, true)); }); };


    return Row;

  })();

  module.exports = Row;

}).call(this);
